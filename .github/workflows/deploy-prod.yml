name: SpringBoot 자동 배포
#main에 push 될 때 실행
on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest

    steps:
      # 1. 체크아웃
      - uses: actions/checkout@v4

      # 2. JDK 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Gradle 캐싱
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      # 4. application.yml 생성
      - name: make application.yml
        if : contains(github.ref,'main')
        run : |
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          touch application.yml
          echo "${{ secrets.YML_PROD }}" > application.yml
        shell: bash

      # 5. gradlew 권한 부여
      - name: Grant Execute Permission For Gradlew
        run: chmod +x gradlew

      # 6. 빌드
      - name: Build without test
        run: ./gradlew build -x test

      # 7. Docker 빌드 & 푸시
      - name: docker build & push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/bfm-docker .
          docker push ${{ secrets.DOCKER_USERNAME }}/bfm-docker:latest

      # 8. EC2에 배포
      - name: Deploy to prod
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_PROD }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          script: |
            docker rm -f $(docker ps -qa)
            docker pull ${{ secrets.DOCKER_USERNAME }}/bfm-docker
            docker-compose up -d
            docker image prune -f
